{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\web\\\\react-course\\\\12-adv-routing\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailsPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailsPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/web/web/react-course/12-adv-routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {  json, useRouteLoaderData } from \"react-router-dom\";\r\n\r\nimport EventItem from '../components/EventItem';\r\n\r\nfunction EventDetailsPage() {\r\nconst data = useRouteLoaderData('event-detail');\r\n\r\n  return (\r\n    <>\r\n      <EventItem event={data.event}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailsPage;\r\n\r\n\r\nexport async function loader({ request, params}) {\r\nconst id = params.eventId\r\n\r\nconst response = await fetch('http://localhost:8080/events/' + id);\r\n\r\nif (!response.ok) {\r\n  throw json(\r\n    { message: 'Could not fetch details for selected event.'},\r\n  {\r\n    status: 500,\r\n  }\r\n  );\r\n} else {\r\nreturn response;\r\n}\r\n\r\n}"],"mappings":";;AAAA,SAAUA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAE5D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAE7C,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC/B,CAAC;AAEP;AAACP,EAAA,CARQD,gBAAgB;EAAA,QACZN,kBAAkB;AAAA;AAAAe,EAAA,GADtBT,gBAAgB;AAUzB,eAAeA,gBAAgB;AAG/B,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAE;EACjD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMxB,IAAI,CACR;MAAEyB,OAAO,EAAE;IAA6C,CAAC,EAC3D;MACEC,MAAM,EAAE;IACV,CACA,CAAC;EACH,CAAC,MAAM;IACP,OAAOJ,QAAQ;EACf;AAEA;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}